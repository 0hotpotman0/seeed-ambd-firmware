/** @brief  GATT write type*/
enum RPC_T_GATT_WRITE_TYPE
{
    RPC_GATT_WRITE_TYPE_REQ = 0x01,           /**<  ATT "Write Request"  */
    RPC_GATT_WRITE_TYPE_CMD = 0x02,           /**<  ATT "Write Command"  */
    RPC_GATT_WRITE_TYPE_SIGNED_CMD = 0x04     /**<  ATT "Signed Write Command"  */
} ;

@group("ble_api")
interface rpc_gatt_client{
    rpc_client_init(uint8 client_num)->void
    rpc_client_all_primary_srv_discovery(uint8 conn_id, uint8 client_id) -> RPC_T_GAP_CAUSE
    rpc_client_by_uuid_srv_discovery(uint8 conn_id, uint8 client_id, uint16 uuid16)  -> RPC_T_GAP_CAUSE
    rpc_client_by_uuid128_srv_discovery(uint8 conn_id, uint8 client_id,in uint8[16] p_uuid128)  -> RPC_T_GAP_CAUSE
    rpc_client_relationship_discovery(uint8 conn_id, uint8 client_id,uint16 start_handle, uint16 end_handle)  -> RPC_T_GAP_CAUSE
    rpc_client_all_char_discovery(uint8 conn_id, uint8 client_id, uint16 start_handle, uint16 end_handle)  -> RPC_T_GAP_CAUSE
    rpc_client_by_uuid_char_discovery(uint8 conn_id, uint8 client_id, uint16 start_handle,uint16 end_handle, uint16 uuid16)  -> RPC_T_GAP_CAUSE
    rpc_client_by_uuid128_char_discovery(uint8 conn_id, uint8 client_id, uint16 start_handle, uint16 end_handle, uint8[16] p_uuid128)  -> RPC_T_GAP_CAUSE
    rpc_client_all_char_descriptor_discovery(uint8 conn_id, uint8 client_id, uint16 start_handle, uint16 end_handle)  -> RPC_T_GAP_CAUSE
    rpc_client_attr_read(uint8 conn_id, uint8 client_id, uint16 handle)  -> RPC_T_GAP_CAUSE
    rpc_client_attr_read_using_uuid(uint8 conn_id, uint8 client_id, uint16 start_handle, uint16 end_handle, uint16 uuid16, uint8[16] p_uuid128)  -> RPC_T_GAP_CAUSE
    rpc_client_attr_write(uint8 conn_id, uint8 client_id, RPC_T_GATT_WRITE_TYPE write_type, uint16 handle, in binary data)  -> RPC_T_GAP_CAUSE
    rpc_client_attr_ind_confirm(uint8 conn_id)  -> RPC_T_GAP_CAUSE
}
